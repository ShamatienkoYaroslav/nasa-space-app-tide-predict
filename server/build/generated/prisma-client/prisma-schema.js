"use strict";
// Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = "type AggregateExtreme {\n  count: Int!\n}\n\ntype AggregateStation {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype Extreme {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  dt: DateTime!\n  height: Float\n  type: String\n}\n\ntype ExtremeConnection {\n  pageInfo: PageInfo!\n  edges: [ExtremeEdge]!\n  aggregate: AggregateExtreme!\n}\n\ninput ExtremeCreateInput {\n  id: ID\n  lat: Float\n  lng: Float\n  dt: DateTime!\n  height: Float\n  type: String\n}\n\ntype ExtremeEdge {\n  node: Extreme!\n  cursor: String!\n}\n\nenum ExtremeOrderByInput {\n  id_ASC\n  id_DESC\n  lat_ASC\n  lat_DESC\n  lng_ASC\n  lng_DESC\n  dt_ASC\n  dt_DESC\n  height_ASC\n  height_DESC\n  type_ASC\n  type_DESC\n}\n\ntype ExtremePreviousValues {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  dt: DateTime!\n  height: Float\n  type: String\n}\n\ntype ExtremeSubscriptionPayload {\n  mutation: MutationType!\n  node: Extreme\n  updatedFields: [String!]\n  previousValues: ExtremePreviousValues\n}\n\ninput ExtremeSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ExtremeWhereInput\n  AND: [ExtremeSubscriptionWhereInput!]\n  OR: [ExtremeSubscriptionWhereInput!]\n  NOT: [ExtremeSubscriptionWhereInput!]\n}\n\ninput ExtremeUpdateInput {\n  lat: Float\n  lng: Float\n  dt: DateTime\n  height: Float\n  type: String\n}\n\ninput ExtremeUpdateManyMutationInput {\n  lat: Float\n  lng: Float\n  dt: DateTime\n  height: Float\n  type: String\n}\n\ninput ExtremeWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  lat: Float\n  lat_not: Float\n  lat_in: [Float!]\n  lat_not_in: [Float!]\n  lat_lt: Float\n  lat_lte: Float\n  lat_gt: Float\n  lat_gte: Float\n  lng: Float\n  lng_not: Float\n  lng_in: [Float!]\n  lng_not_in: [Float!]\n  lng_lt: Float\n  lng_lte: Float\n  lng_gt: Float\n  lng_gte: Float\n  dt: DateTime\n  dt_not: DateTime\n  dt_in: [DateTime!]\n  dt_not_in: [DateTime!]\n  dt_lt: DateTime\n  dt_lte: DateTime\n  dt_gt: DateTime\n  dt_gte: DateTime\n  height: Float\n  height_not: Float\n  height_in: [Float!]\n  height_not_in: [Float!]\n  height_lt: Float\n  height_lte: Float\n  height_gt: Float\n  height_gte: Float\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n  AND: [ExtremeWhereInput!]\n  OR: [ExtremeWhereInput!]\n  NOT: [ExtremeWhereInput!]\n}\n\ninput ExtremeWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createExtreme(data: ExtremeCreateInput!): Extreme!\n  updateExtreme(data: ExtremeUpdateInput!, where: ExtremeWhereUniqueInput!): Extreme\n  updateManyExtremes(data: ExtremeUpdateManyMutationInput!, where: ExtremeWhereInput): BatchPayload!\n  upsertExtreme(where: ExtremeWhereUniqueInput!, create: ExtremeCreateInput!, update: ExtremeUpdateInput!): Extreme!\n  deleteExtreme(where: ExtremeWhereUniqueInput!): Extreme\n  deleteManyExtremes(where: ExtremeWhereInput): BatchPayload!\n  createStation(data: StationCreateInput!): Station!\n  updateStation(data: StationUpdateInput!, where: StationWhereUniqueInput!): Station\n  updateManyStations(data: StationUpdateManyMutationInput!, where: StationWhereInput): BatchPayload!\n  upsertStation(where: StationWhereUniqueInput!, create: StationCreateInput!, update: StationUpdateInput!): Station!\n  deleteStation(where: StationWhereUniqueInput!): Station\n  deleteManyStations(where: StationWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  extreme(where: ExtremeWhereUniqueInput!): Extreme\n  extremes(where: ExtremeWhereInput, orderBy: ExtremeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Extreme]!\n  extremesConnection(where: ExtremeWhereInput, orderBy: ExtremeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExtremeConnection!\n  station(where: StationWhereUniqueInput!): Station\n  stations(where: StationWhereInput, orderBy: StationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Station]!\n  stationsConnection(where: StationWhereInput, orderBy: StationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StationConnection!\n  node(id: ID!): Node\n}\n\ntype Station {\n  id: ID!\n  wtId: String!\n  name: String!\n  lat: Float!\n  lng: Float!\n}\n\ntype StationConnection {\n  pageInfo: PageInfo!\n  edges: [StationEdge]!\n  aggregate: AggregateStation!\n}\n\ninput StationCreateInput {\n  id: ID\n  wtId: String!\n  name: String!\n  lat: Float!\n  lng: Float!\n}\n\ntype StationEdge {\n  node: Station!\n  cursor: String!\n}\n\nenum StationOrderByInput {\n  id_ASC\n  id_DESC\n  wtId_ASC\n  wtId_DESC\n  name_ASC\n  name_DESC\n  lat_ASC\n  lat_DESC\n  lng_ASC\n  lng_DESC\n}\n\ntype StationPreviousValues {\n  id: ID!\n  wtId: String!\n  name: String!\n  lat: Float!\n  lng: Float!\n}\n\ntype StationSubscriptionPayload {\n  mutation: MutationType!\n  node: Station\n  updatedFields: [String!]\n  previousValues: StationPreviousValues\n}\n\ninput StationSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StationWhereInput\n  AND: [StationSubscriptionWhereInput!]\n  OR: [StationSubscriptionWhereInput!]\n  NOT: [StationSubscriptionWhereInput!]\n}\n\ninput StationUpdateInput {\n  wtId: String\n  name: String\n  lat: Float\n  lng: Float\n}\n\ninput StationUpdateManyMutationInput {\n  wtId: String\n  name: String\n  lat: Float\n  lng: Float\n}\n\ninput StationWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  wtId: String\n  wtId_not: String\n  wtId_in: [String!]\n  wtId_not_in: [String!]\n  wtId_lt: String\n  wtId_lte: String\n  wtId_gt: String\n  wtId_gte: String\n  wtId_contains: String\n  wtId_not_contains: String\n  wtId_starts_with: String\n  wtId_not_starts_with: String\n  wtId_ends_with: String\n  wtId_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  lat: Float\n  lat_not: Float\n  lat_in: [Float!]\n  lat_not_in: [Float!]\n  lat_lt: Float\n  lat_lte: Float\n  lat_gt: Float\n  lat_gte: Float\n  lng: Float\n  lng_not: Float\n  lng_in: [Float!]\n  lng_not_in: [Float!]\n  lng_lt: Float\n  lng_lte: Float\n  lng_gt: Float\n  lng_gte: Float\n  AND: [StationWhereInput!]\n  OR: [StationWhereInput!]\n  NOT: [StationWhereInput!]\n}\n\ninput StationWhereUniqueInput {\n  id: ID\n  wtId: String\n}\n\ntype Subscription {\n  extreme(where: ExtremeSubscriptionWhereInput): ExtremeSubscriptionPayload\n  station(where: StationSubscriptionWhereInput): StationSubscriptionPayload\n}\n";
